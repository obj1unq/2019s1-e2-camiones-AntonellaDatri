import camion.*
import cosas.*
describe ""{
	fixture {
		camion.cargar(knightRider)
		camion.cargar(bumblebee)
	}
	test " suma del peso del camión vacío (tara) y su carga" {
	
	assert.equals(camion.pesoTotal(), 2300)

	}
	test "el peso total es superior a 2.5 toneladas" {
	assert.notThat(camion.excedidoDePeso())
	camion.cargar(bumblebee)
	assert.that(camion.excedidoDePeso())
	

	}
	test "los objetos cargados mas peligrosos que 'nivel'/bumblebee es un auto/" {
	
	assert.equals(camion.objetosPeligrosos(9), [knightRider, bumblebee] )
	assert.equals(camion.objetosPeligrosos(11), [bumblebee] )
	assert.equals(camion.objetosPeligrosos(30), [] )
	}
	test "los objetos cargados mas peligrosos que 'cosa'" {
	assert.equals(camion.objetosMasPeligrososQue(knightRider), [bumblebee])

	}
	test "alguna de las cosas que el camion transporta no supera el nivelMaximoDePeligrosidad" {
	assert.that(camion.puedeCircularEnRuta(30))
	assert.notThat(camion.puedeCircularEnRuta(14))

	}
	test "el peso de alguna de las cosas que tiene el camión está en el intervalo dado" {
	assert.that(camion.tieneAlgoQuePesaEntre(500, 700))
	assert.notThat(camion.tieneAlgoQuePesaEntre(100, 300))

	}
	test "la cosa más pesada que tenga el camión" {
	assert.equals(camion.cosaMasPesada(), bumblebee)

	}
	test " suma de bultos que se está transportando" {
	assert.equals(camion.totalBultos(), 3)

	}
	test "lista con los pesos de cada cosa que tiene el camión" {
	assert.equals(camion.pesos(), [500, 800])

	}
	
}

